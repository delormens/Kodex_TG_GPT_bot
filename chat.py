import openai
import telebot
import datetime
from telebot import types

openai.api_key = "TOKEN"
bot = telebot.TeleBot("TOKEN")

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ChatGPT –±–æ—Ç–∞. –ó–∞–¥–∞–π –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∏ –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç!\nüíé –ù–∞—à–∏ –±–æ—Ç—ã:\n@kodex_shop_bot - –ù–∞—à –º–∞–≥–∞–∑–∏–Ω\n@kodex_vpn_bot - –ù–∞—à VPN-–±–æ—Ç\n@kodex_file_bot - –ù–∞—à —Ñ–∞–π–ª–æ–æ–±–º–µ–Ω–Ω–∏–∫")

excluded_users = [5117455510]

user_requests = {}
@bot.message_handler(func=lambda message: True)
def echo_all(message):
    user_id = message.from_user.id
    if user_id not in excluded_users:
        if user_id not in user_requests:
            user_requests[user_id] = {"count": 0, "last_request": datetime.date.today()}
        today = datetime.date.today()
        if today > user_requests[user_id]["last_request"]:
            user_requests[user_id] = {"count": 0, "last_request": today}
        if user_requests[user_id]["count"] >= 15:
            bot.reply_to(message, "–í—ã –∏—Å—á–µ—Ä–ø–∞–ª–∏ –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞.")
            return
        user_requests[user_id]["count"] += 1
    bot.reply_to(message, "–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    response = openai.Completion.create(
        engine="text-davinci-003",
        prompt=message.text,
        max_tokens=2048,
        n=1,
        stop=None,
        temperature=0.5,
    )
    bot.reply_to(message, response["choices"][0]["text"])
    
bot.polling()

